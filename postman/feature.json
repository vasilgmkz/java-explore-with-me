{
	"info": {
		"_postman_id": "02e1a248-db18-4a98-9892-a79e3516b0b6",
		"name": "Locations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36814165"
	},
	"item": [
		{
			"name": "Добавить локацию id=1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"const source = JSON.parse(pm.request.body.raw);\r",
							"const target = pm.response.json();\r",
							"\r",
							"pm.test(\"Локация должна содержать поля: id, name, lat, lon, radius, created\", function () {\r",
							"pm.expect(target).to.have.property('id');\r",
							"pm.expect(target).to.have.property('name');\r",
							"pm.expect(target).to.have.property('lat');\r",
							"pm.expect(target).to.have.property('lon');\r",
							"pm.expect(target).to.have.property('radius');\r",
							"pm.expect(target).to.have.property('created');\r",
							"});\r",
							"\r",
							"pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {\r",
							"    pm.expect(target.id).to.not.be.null;\r",
							"    pm.expect(source.name).equal(target.name, 'Имя пользователя должно соответствовать отправленному в запросе');\r",
							"    pm.expect(source.lat).equal(target.lat, 'Широта должна соответствовать отправленной в запросе');\r",
							"    pm.expect(source.lon).equal(target.lon, 'Долгота должна соответствовать отправленной в запросе');\r",
							"    pm.expect(source.radius).equal(target.radius, 'Радиус должен соответствовать отправленному в запросе');\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Национальный художественный музей Беларуси\",\r\n  \"lat\": 53.898518,\r\n  \"lon\":27.56079,\r\n  \"radius\": 1.5\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/locations",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"locations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавить локацию id=2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 201 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"const source = JSON.parse(pm.request.body.raw);\r",
							"const target = pm.response.json();\r",
							"\r",
							"pm.test(\"Локация должна содержать поля: id, name, lat, lon, radius, created\", function () {\r",
							"pm.expect(target).to.have.property('id');\r",
							"pm.expect(target).to.have.property('name');\r",
							"pm.expect(target).to.have.property('lat');\r",
							"pm.expect(target).to.have.property('lon');\r",
							"pm.expect(target).to.have.property('radius');\r",
							"pm.expect(target).to.have.property('created');\r",
							"});\r",
							"\r",
							"pm.test(\"Данные в ответе должны соответствовать данным в запросе\", function () {\r",
							"    pm.expect(target.id).to.not.be.null;\r",
							"    pm.expect(source.name).equal(target.name, 'Имя пользователя должно соответствовать отправленному в запросе');\r",
							"    pm.expect(source.lat).equal(target.lat, 'Широта должна соответствовать отправленной в запросе');\r",
							"    pm.expect(source.lon).equal(target.lon, 'Долгота должна соответствовать отправленной в запросе');\r",
							"    pm.expect(source.radius).equal(target.radius, 'Радиус должен соответствовать отправленному в запросе');\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Национальный художественный музей Беларуси №2\",\r\n  \"lat\": 53.898518,\r\n  \"lon\":27.56079,\r\n  \"radius\": 0.5\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/locations",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"locations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Обновить локацию",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.be.ok;    \r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"const source = JSON.parse(pm.request.body.raw);\r",
							"const target = pm.response.json();\r",
							"\r",
							"pm.test(\"Локация должна содержать поля: id, name, lat, lon, radius, created\", function () {\r",
							"pm.expect(target).to.have.property('id');\r",
							"pm.expect(target).to.have.property('name');\r",
							"pm.expect(target).to.have.property('lat');\r",
							"pm.expect(target).to.have.property('lon');\r",
							"pm.expect(target).to.have.property('radius');\r",
							"pm.expect(target).to.have.property('created');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Национальный цирк Республики Беларусь\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/locations/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"locations",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Удаление локации",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"source = pm.collectionVariables.get('response');\r",
							"catId = pm.collectionVariables.get('catid');"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/admin/locations/12",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"locations",
						"12"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение локации по id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});\r",
							"\r",
							"const source = JSON.parse(pm.request.body.raw);\r",
							"const target = pm.response.json();\r",
							"\r",
							"pm.test(\"Локация должна содержать поля: id, name, lat, lon, radius, created\", function () {\r",
							"pm.expect(target).to.have.property('id');\r",
							"pm.expect(target).to.have.property('name');\r",
							"pm.expect(target).to.have.property('lat');\r",
							"pm.expect(target).to.have.property('lon');\r",
							"pm.expect(target).to.have.property('radius');\r",
							"pm.expect(target).to.have.property('created');\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/admin/locations/11",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"locations",
						"11"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получить все локации",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/admin/locations",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"locations"
					]
				}
			},
			"response": []
		},
		{
			"name": "Добавление события",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": " { \r\n  \"annotation\": \"Театральное выступление в Купаловском Театре\",\r\n  \"category\": 1,\r\n  \"description\": \"Театральное выступление в Купаловском Театре, Театральное выступление в Купаловском Театре, Театральное выступление в Купаловском Театре.\",\r\n  \"eventDate\": \"2024-12-20 17:27:05\",\r\n  \"location\": {\r\n    \"lat\": 53.90092327783261,\r\n    \"lon\": 27.562721187964797\r\n  },\r\n  \"paid\": true,\r\n  \"participantLimit\": 10,\r\n  \"requestModeration\": true,\r\n  \"title\": \"Театральное выступление\"\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users/1/events",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"1",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "Обновление события администратором",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"stateAction\": \"PUBLISH_EVENT\",\r\n    \"location\": {\r\n    \"lat\": 53.90092327783261,\r\n    \"lon\": 27.562721187964797\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/admin/events/11",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"events",
						"11"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение событий администратором",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/admin/events?location=Национальный художественный музей Беларуси",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"admin",
						"events"
					],
					"query": [
						{
							"key": "users",
							"value": null,
							"disabled": true
						},
						{
							"key": "states",
							"value": null,
							"disabled": true
						},
						{
							"key": "categories",
							"value": null,
							"disabled": true
						},
						{
							"key": "rangeStart",
							"value": null,
							"disabled": true
						},
						{
							"key": "rangeEnd",
							"value": null,
							"disabled": true
						},
						{
							"key": "from",
							"value": null,
							"disabled": true
						},
						{
							"key": "size",
							"value": null,
							"disabled": true
						},
						{
							"key": "location",
							"value": "Национальный художественный музей Беларуси"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение событий пользователем",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ответ должен содержать код статуса 200 и данные в формате json\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.response.to.be.withBody;\r",
							"    pm.response.to.be.json;\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/events?location=Национальный художественный музей Беларуси",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"events"
					],
					"query": [
						{
							"key": "location",
							"value": "Национальный художественный музей Беларуси"
						}
					]
				}
			},
			"response": []
		}
	]
}